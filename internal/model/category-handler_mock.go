// Code generated by MockGen. DO NOT EDIT.
// Source: category-handler.go

// Package model is a generated GoMock package.
package model

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	category "github.com/sorohimm/uacs-store-back/internal/storage/postgres/api/category"
	api "github.com/sorohimm/uacs-store-back/pkg/api"
)

// MockCategoryRequesterHandler is a mock of CategoryRequesterHandler interface.
type MockCategoryRequesterHandler struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryRequesterHandlerMockRecorder
}

// MockCategoryRequesterHandlerMockRecorder is the mock recorder for MockCategoryRequesterHandler.
type MockCategoryRequesterHandlerMockRecorder struct {
	mock *MockCategoryRequesterHandler
}

// NewMockCategoryRequesterHandler creates a new mock instance.
func NewMockCategoryRequesterHandler(ctrl *gomock.Controller) *MockCategoryRequesterHandler {
	mock := &MockCategoryRequesterHandler{ctrl: ctrl}
	mock.recorder = &MockCategoryRequesterHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategoryRequesterHandler) EXPECT() *MockCategoryRequesterHandlerMockRecorder {
	return m.recorder
}

// CreateCategory mocks base method.
func (m *MockCategoryRequesterHandler) CreateCategory(ctx context.Context, req *api.CreateCategoryRequest) (*category.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCategory", ctx, req)
	ret0, _ := ret[0].(*category.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCategory indicates an expected call of CreateCategory.
func (mr *MockCategoryRequesterHandlerMockRecorder) CreateCategory(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCategory", reflect.TypeOf((*MockCategoryRequesterHandler)(nil).CreateCategory), ctx, req)
}
